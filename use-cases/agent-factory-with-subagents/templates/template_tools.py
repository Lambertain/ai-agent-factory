# -*- coding: utf-8 -*-
"""
–®–ê–ë–õ–û–ù: –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è Pydantic AI –∞–≥–µ–Ω—Ç–∞

–≠—Ç–æ—Ç —à–∞–±–ª–æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∏–º–µ—Ä—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–≥–µ–Ω—Ç–∞.
–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–æ–º–æ–≥–∞—é—Ç Claude –≤ —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏.

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
1. –ó–∞–º–µ–Ω–∏—Ç–µ [AGENT_NAME] –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –∞–≥–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, payment_integration)
2. –î–æ–±–∞–≤—å—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –≤–∞—à–µ–π –æ–±–ª–∞—Å—Ç–∏ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã
3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞–∫ agents/[agent_name]/tools.py

–í–ê–ñ–ù–û: –≠—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –í–ê–ú–ò (Claude) –∫–æ–≥–¥–∞ –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Ä–æ–ª—å —ç—Ç–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞.
–≠—Ç–æ –ù–ï –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã, –∞ –ø–æ–º–æ—â–Ω–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ä–æ–ª–∏.
"""

import logging
from typing import Optional, Dict, Any, List
from pydantic_ai import RunContext

logger = logging.getLogger(__name__)

# ============================================================================
# –ò–ù–°–¢–†–£–ú–ï–ù–¢ 1: –ü–û–ò–°–ö –í –ë–ê–ó–ï –ó–ù–ê–ù–ò–ô –†–û–õ–ò
# –ü–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–≥–¥–∞ –≤—ã –≤ —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞
# ============================================================================

async def search_agent_knowledge(
    ctx: RunContext,
    query: str,
    match_count: int = 5
) -> str:
    """
    –ü–æ–∏—Å–∫ –≤ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π —Ä–æ–ª–∏ —á–µ—Ä–µ–∑ Archon RAG.

    –ö–æ–≥–¥–∞ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –≤ —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞, —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏
    —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π —ç—Ç–æ–π —Ä–æ–ª–∏.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
        query: –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        match_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    Returns:
        –ù–∞–π–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π —Ä–æ–ª–∏
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–≥–∏ –∑–Ω–∞–Ω–∏–π –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        knowledge_tags = getattr(ctx.deps, 'knowledge_tags', [])
        knowledge_domain = getattr(ctx.deps, 'knowledge_domain', None)

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Å —É—á–µ—Ç–æ–º —Ç–µ–≥–æ–≤ —Ä–æ–ª–∏
        search_query = f"{query} {' '.join(knowledge_tags)}"

        logger.info(f"–ò—â—É –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π —Ä–æ–ª–∏: {search_query}")

        # –ü–†–ò–ú–ï–ß–ê–ù–ò–ï: –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–æ–≤ Archon RAG
        # –î–ª—è —à–∞–±–ª–æ–Ω–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –∞–≥–µ–Ω—Ç–µ: await mcp__archon__rag_search_knowledge_base(...)

        result = f"""
üìö **–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π —Ä–æ–ª–∏ [{ctx.deps.agent_name}]:**

üîç –ó–∞–ø—Ä–æ—Å: {query}
üìã –¢–µ–≥–∏: {', '.join(knowledge_tags)}
üåê –î–æ–º–µ–Ω: {knowledge_domain or '–ù–µ —É–∫–∞–∑–∞–Ω'}

üí° **–ù–∞–π–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
[–ó–¥–µ—Å—å –±—É–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –∏–∑ Archon RAG]

–®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ mcp__archon__rag_search_knowledge_base
"""

        return result

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}"


# ============================================================================
# –ò–ù–°–¢–†–£–ú–ï–ù–¢ 2: –ê–ù–ê–õ–ò–ó –ó–ê–î–ê–ß–ò –° –¢–û–ß–ö–ò –ó–†–ï–ù–ò–Ø –†–û–õ–ò
# –ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É –∏—Å–ø–æ–ª—å–∑—É—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É —Ä–æ–ª–∏
# ============================================================================

async def analyze_task_as_expert(
    ctx: RunContext,
    task_description: str,
    focus_area: Optional[str] = None
) -> str:
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã —Ä–æ–ª–∏.

    –ö–æ–≥–¥–∞ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –≤ —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞, —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–º–æ–≥–∞–µ—Ç
    —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑ –∑–∞–¥–∞—á–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–µ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        task_description: –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        focus_area: –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Ñ–æ–∫—É—Å–∞

    Returns:
        –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–¥–∞—á–∏
    """
    try:
        logger.info(f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∑–∞–¥–∞—á—É –∫–∞–∫ —ç–∫—Å–ø–µ—Ä—Ç {ctx.deps.agent_name}")

        # –®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –∞–Ω–∞–ª–∏–∑–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –¥–ª—è —Ä–æ–ª–∏
        # –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π:
        # - Security Expert: –∞–Ω–∞–ª–∏–∑ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π, –≤–µ–∫—Ç–æ—Ä–æ–≤ –∞—Ç–∞–∫
        # - Performance Expert: –∞–Ω–∞–ª–∏–∑ bottleneck'–æ–≤, –º–µ—Ç—Ä–∏–∫
        # - UI/UX Expert: –∞–Ω–∞–ª–∏–∑ usability, accessibility

        analysis = f"""
üéØ **–ê–Ω–∞–ª–∏–∑ –∑–∞–¥–∞—á–∏ ({ctx.deps.agent_name}):**

**–ó–∞–¥–∞—á–∞:** {task_description}
**–û–±–ª–∞—Å—Ç—å —Ñ–æ–∫—É—Å–∞:** {focus_area or '–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑'}

**–° —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã —Ä–æ–ª–∏:**
1. [–ê—Å–ø–µ–∫—Ç 1 —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è —Ä–æ–ª–∏]
2. [–ê—Å–ø–µ–∫—Ç 2 —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è —Ä–æ–ª–∏]
3. [–ê—Å–ø–µ–∫—Ç 3 —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è —Ä–æ–ª–∏]

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
- [–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 1]
- [–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 2]

**–†–∏—Å–∫–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:**
- [–†–∏—Å–∫ 1]
- [–†–∏—Å–∫ 2]

–®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è –≤–∞—à–µ–π —Ä–æ–ª–∏
"""

        return analysis

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–¥–∞—á–∏: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}"


# ============================================================================
# –ò–ù–°–¢–†–£–ú–ï–ù–¢ 3: –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –≠–ö–°–ü–ï–†–¢–ò–ó–´ –ö –†–ï–®–ï–ù–ò–Æ
# –ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è —Ä–æ–ª–∏ –∫ –∑–∞–¥–∞—á–µ
# ============================================================================

async def apply_expert_solution(
    ctx: RunContext,
    problem: str,
    constraints: Optional[List[str]] = None
) -> str:
    """
    –ü—Ä–∏–º–µ–Ω–∏—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É —Ä–æ–ª–∏ –∫ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã.

    –ö–æ–≥–¥–∞ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –≤ —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞, —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–º–æ–≥–∞–µ—Ç
    —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É—è best practices –≤–∞—à–µ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        problem: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
        constraints: –°–ø–∏—Å–æ–∫ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π

    Returns:
        –†–µ—à–µ–Ω–∏–µ —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã
    """
    try:
        logger.info(f"–ü—Ä–∏–º–µ–Ω—è—é —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—É {ctx.deps.agent_name} –∫ —Ä–µ—à–µ–Ω–∏—é")

        constraints_list = constraints or []

        # –®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É —Ä–µ—à–µ–Ω–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –¥–ª—è —Ä–æ–ª–∏
        solution = f"""
üí° **–†–µ—à–µ–Ω–∏–µ –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞ ({ctx.deps.agent_name}):**

**–ü—Ä–æ–±–ª–µ–º–∞:** {problem}
**–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:** {', '.join(constraints_list) if constraints_list else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}

**–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ:**
1. [–®–∞–≥ 1 —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã]
2. [–®–∞–≥ 2 —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã]
3. [–®–∞–≥ 3 —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã]

**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ (–ø–æ—á–µ–º—É —ç—Ç–æ —Ä–µ—à–µ–Ω–∏–µ):**
- [–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã]

**Best practices –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–µ:**
- [Best practice 1]
- [Best practice 2]

**–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã:**
- [–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ 1]
- [–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ 2]

–®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–µ –¥–ª—è –≤–∞—à–µ–π —Ä–æ–ª–∏
"""

        return solution

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏—è: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ—à–µ–Ω–∏—è: {e}"


# ============================================================================
# –ò–ù–°–¢–†–£–ú–ï–ù–¢ 4: –ß–ï–ö–õ–ò–°–¢ –ö–ê–ß–ï–°–¢–í–ê –î–õ–Ø –†–û–õ–ò
# –ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º —Ä–æ–ª–∏
# ============================================================================

async def check_quality_standards(
    ctx: RunContext,
    work_description: str,
    work_type: str = "implementation"
) -> str:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–æ–ª–∏.

    –ö–æ–≥–¥–∞ –≤—ã –∑–∞–≤–µ—Ä—à–∞–µ—Ç–µ —Ä–∞–±–æ—Ç—É –≤ —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞, —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–º–æ–≥–∞–µ—Ç
    –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –≤–∞—à–µ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        work_description: –û–ø–∏—Å–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
        work_type: –¢–∏–ø —Ä–∞–±–æ—Ç—ã (implementation, analysis, review, documentation)

    Returns:
        –ß–µ–∫–ª–∏—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
    """
    try:
        logger.info(f"–ü—Ä–æ–≤–µ—Ä—è—é –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã –∫–∞–∫ {ctx.deps.agent_name}")

        # –®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —Ä–æ–ª–∏
        # –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π:
        # - Security Expert: OWASP Top 10, CWE –ø—Ä–æ–≤–µ—Ä–∫–∏
        # - Performance Expert: Core Web Vitals, –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        # - UI/UX Expert: WCAG, usability heuristics

        checklist = f"""
‚úÖ **–ß–µ–∫–ª–∏—Å—Ç –∫–∞—á–µ—Å—Ç–≤–∞ ({ctx.deps.agent_name}):**

**–¢–∏–ø —Ä–∞–±–æ—Ç—ã:** {work_type}
**–û–ø–∏—Å–∞–Ω–∏–µ:** {work_description[:200]}...

**–°—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Ä–æ–ª–∏:**
‚ñ° [–ö—Ä–∏—Ç–µ—Ä–∏–π 1 —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è —Ä–æ–ª–∏]
‚ñ° [–ö—Ä–∏—Ç–µ—Ä–∏–π 2 —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è —Ä–æ–ª–∏]
‚ñ° [–ö—Ä–∏—Ç–µ—Ä–∏–π 3 —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è —Ä–æ–ª–∏]

**–û–±—â–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏:**
‚ñ° –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç—å (0% –ø—Ä–æ–µ–∫—Ç-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ –∫–æ–¥–∞)
‚ñ° –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –ø—Ä–∏–º–µ—Ä—ã
‚ñ° –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ best practices

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è:**
- [–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 1]
- [–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 2]

–®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —á–µ–∫–ª–∏—Å—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è –≤–∞—à–µ–π —Ä–æ–ª–∏
"""

        return checklist

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}"


# ============================================================================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –î–õ–Ø –°–ü–ï–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò
# –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –≤–∞—à–µ–π —Ä–æ–ª–∏
# ============================================================================

# –ü–†–ò–ú–ï–†: –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–π –∑–∞–¥–∞—á–∏ —Ä–æ–ª–∏
async def [agent_name]_specific_tool(
    ctx: RunContext,
    param1: str,
    param2: Optional[int] = None
) -> str:
    """
    –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–¥–∞—á —Ä–æ–ª–∏.

    –®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤–∞—à–µ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
    –ü—Ä–∏–º–µ—Ä—ã:
    - Security: scan_for_vulnerabilities()
    - Performance: profile_performance()
    - UI/UX: check_accessibility()

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        param1: –ü–∞—Ä–∞–º–µ—Ç—Ä 1
        param2: –ü–∞—Ä–∞–º–µ—Ç—Ä 2 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

    Returns:
        –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
    """
    try:
        logger.info(f"–í—ã–ø–æ–ª–Ω—è—é —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –∑–∞–¥–∞—á—É —Ä–æ–ª–∏ {ctx.deps.agent_name}")

        # –®–ê–ë–õ–û–ù: –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ª–æ–≥–∏–∫—É —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –¥–ª—è –≤–∞—à–µ–π —Ä–æ–ª–∏
        result = f"""
üîß **–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞:**

–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {param1}, {param2}

[–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–π –∑–∞–¥–∞—á–∏ —Ä–æ–ª–∏]

–®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
"""

        return result

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"


# ============================================================================
# –≠–ö–°–ü–û–†–¢ –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í
# ============================================================================

__all__ = [
    "search_agent_knowledge",
    "analyze_task_as_expert",
    "apply_expert_solution",
    "check_quality_standards",
    "[agent_name]_specific_tool"
]
