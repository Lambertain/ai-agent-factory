# -*- coding: utf-8 -*-
"""
–®–ê–ë–õ–û–ù: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è Pydantic AI –∞–≥–µ–Ω—Ç–∞

–≠—Ç–æ—Ç —à–∞–±–ª–æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –∞–≥–µ–Ω—Ç–∞.
Dependencies –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–±–æ—Ç—ã –∫–æ–≥–¥–∞ –≤—ã (Claude) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Ä–æ–ª—å —ç–∫—Å–ø–µ—Ä—Ç–∞.

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
1. –ó–∞–º–µ–Ω–∏—Ç–µ [AGENT_NAME] –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –∞–≥–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, payment_integration)
2. –£–∫–∞–∂–∏—Ç–µ knowledge_tags –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ RAG
3. –î–æ–±–∞–≤—å—Ç–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–∞—à–µ–π –æ–±–ª–∞—Å—Ç–∏
4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞–∫ agents/[agent_name]/dependencies.py

–í–ê–ñ–ù–û: –≠—Ç–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –í–ê–®–ï–ô —Ä–∞–±–æ—Ç—ã –≤ —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞, –Ω–µ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞.
"""

import os
from dataclasses import dataclass, field
from typing import Optional, List, Dict, Any

# ============================================================================
# –ö–û–ù–°–¢–ê–ù–¢–´ –ê–ì–ï–ù–¢–ê (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ü–û–õ–ù–ò–¢–¨)
# ============================================================================

# üö® –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –≤–∞—à–µ–≥–æ –∞–≥–µ–Ω—Ç–∞
AGENT_NAME = "[agent_name]"  # –ù–∞–ø—Ä–∏–º–µ—Ä: "payment_integration"

# üö® –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: —É–∫–∞–∂–∏—Ç–µ —Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–Ω–∞–Ω–∏–π —Ä–æ–ª–∏ –≤ RAG
DEFAULT_KNOWLEDGE_TAGS = [
    "[agent_name]",           # –ò–º—è –∞–≥–µ–Ω—Ç–∞
    "agent-knowledge",        # –ú–∞—Ä–∫–µ—Ä –∑–Ω–∞–Ω–∏–π –∞–≥–µ–Ω—Ç–∞
    "pydantic-ai",            # –§—Ä–µ–π–º–≤–æ—Ä–∫
    "[domain]"                # –û–±–ª–∞—Å—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: payments, security, ui)
]

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: domain –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ RAG
DEFAULT_KNOWLEDGE_DOMAIN = None  # –ù–∞–ø—Ä–∏–º–µ—Ä: "docs.stripe.com" –¥–ª—è Payment Agent

# ID –ø—Ä–æ–µ–∫—Ç–∞ AI Agent Factory –≤ Archon (–¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–¥–∞—á)
DEFAULT_ARCHON_PROJECT_ID = "c75ef8e3-6f4d-4da2-9e81-8d38d04a341a"

# ============================================================================
# –ö–õ–ê–°–° –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô –ê–ì–ï–ù–¢–ê
# –≠—Ç–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞
# ============================================================================

@dataclass
class [AGENT_NAME_PASCAL]Dependencies:
    """
    –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ä–æ–ª–∏ [Agent Display Name].

    –≠—Ç–æ—Ç dataclass —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã
    –∫–æ–≥–¥–∞ –≤—ã (Claude) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Ä–æ–ª—å —ç—Ç–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞:
    - API –∫–ª—é—á–∏ –∏ –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    - –¢–µ–≥–∏ –∑–Ω–∞–Ω–∏–π –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ RAG
    - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç–∏
    - –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–æ–ª–∏

    –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ü–û–õ–Ø:
    - api_key: API –∫–ª—é—á –¥–ª—è LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    - knowledge_tags: —Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π
    """

    # ========================================================================
    # –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û)
    # ========================================================================

    api_key: str
    """API –∫–ª—é—á –¥–ª—è LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)."""

    project_path: str = ""
    """–ü—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)."""

    # ========================================================================
    # –ò–î–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø –†–û–õ–ò
    # ========================================================================

    agent_name: str = AGENT_NAME
    """–ò–º—è —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞."""

    agent_type: str = "[agent_type]"
    """–¢–∏–ø —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: payment_integration, security_audit, ui_ux)."""

    # ========================================================================
    # –ó–ù–ê–ù–ò–Ø –†–û–õ–ò (–¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ RAG)
    # ========================================================================

    knowledge_tags: List[str] = field(default_factory=lambda: DEFAULT_KNOWLEDGE_TAGS.copy())
    """–¢–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞–Ω–∏–π —Ä–æ–ª–∏ –≤ RAG."""

    knowledge_domain: Optional[str] = DEFAULT_KNOWLEDGE_DOMAIN
    """–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–Ω–∞–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä: docs.stripe.com)."""

    knowledge_match_count: int = 5
    """–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π."""

    # ========================================================================
    # –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–°–¢–¨ –†–û–õ–ò
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
    # ========================================================================

    domain_type: str = "[domain]"
    """
    –¢–∏–ø –¥–æ–º–µ–Ω–∞ –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ —Ä–æ–ª–∏.
    –ü—Ä–∏–º–µ—Ä—ã: "payments", "security", "ui/ux", "performance", "database"
    """

    project_type: str = "universal"
    """
    –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ —Å–æ–≤–µ—Ç–æ–≤ —Ä–æ–ª–∏.
    –ü—Ä–∏–º–µ—Ä—ã: "e-commerce", "saas", "blog", "crm", "social-network"
    """

    framework: Optional[str] = None
    """
    –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ (–¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤).
    –ü—Ä–∏–º–µ—Ä—ã: "Next.js", "React", "Vue", "Django", "FastAPI"
    """

    # ========================================================================
    # –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° ARCHON
    # –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–¥–∞—á –∫–æ–≥–¥–∞ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –≤ —Ä–æ–ª–∏
    # ========================================================================

    archon_project_id: str = DEFAULT_ARCHON_PROJECT_ID
    """ID –ø—Ä–æ–µ–∫—Ç–∞ –≤ Archon –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–¥–∞—á."""

    current_task_id: Optional[str] = None
    """ID —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏ –≤ Archon (–µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –Ω–∞–¥ –∑–∞–¥–∞—á–µ–π)."""

    # ========================================================================
    # –°–ü–ï–¶–ò–§–ò–ß–ù–´–ï –î–õ–Ø –†–û–õ–ò –ù–ê–°–¢–†–û–ô–ö–ò
    # –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –≤–∞—à–µ–π –æ–±–ª–∞—Å—Ç–∏ —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã
    # ========================================================================

    # –®–ê–ë–õ–û–ù: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞—à–µ–π —Ä–æ–ª–∏
    # –ü—Ä–∏–º–µ—Ä—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π:
    #
    # Payment Expert:
    #   stripe_api_key: Optional[str] = None
    #   paypal_client_id: Optional[str] = None
    #   supported_currencies: List[str] = field(default_factory=lambda: ["USD", "EUR"])
    #
    # Security Expert:
    #   scan_depth: str = "comprehensive"  # basic, standard, comprehensive
    #   vulnerability_threshold: str = "medium"  # low, medium, high, critical
    #   compliance_standards: List[str] = field(default_factory=lambda: ["OWASP", "CWE"])
    #
    # UI/UX Expert:
    #   design_system: Optional[str] = "material"  # material, bootstrap, custom
    #   accessibility_level: str = "WCAG-AA"  # WCAG-A, WCAG-AA, WCAG-AAA
    #   target_devices: List[str] = field(default_factory=lambda: ["desktop", "mobile"])

    [agent_specific_setting]: Optional[str] = None
    """–û–ø–∏—Å–∞–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–∏."""

    # ========================================================================
    # –ö–û–ù–¢–ï–ö–°–¢ –†–ê–ë–û–¢–´
    # ========================================================================

    session_id: Optional[str] = None
    """ID —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π."""

    user_id: Optional[str] = None
    """ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏."""

    work_context: Dict[str, Any] = field(default_factory=dict)
    """–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–±–æ—Ç—ã –≤ —Ä–æ–ª–∏."""

    # ========================================================================
    # –ú–ï–¢–û–î–´
    # ========================================================================

    def __post_init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π."""
        # –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ä–æ–ª–∏ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ
        if not self.agent_name or self.agent_name == AGENT_NAME:
            module_parts = self.__class__.__module__.split('.')
            if 'agents' in module_parts:
                agent_index = module_parts.index('agents')
                if agent_index + 1 < len(module_parts):
                    self.agent_name = module_parts[agent_index + 1]

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ knowledge_tags –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –µ—Å–ª–∏ –ø—É—Å—Ç–æ
        if not self.knowledge_tags:
            agent_base_name = self.agent_name.replace('_agent', '') if self.agent_name else 'unknown'
            self.knowledge_tags = [
                agent_base_name,
                "agent-knowledge",
                "pydantic-ai"
            ]

        # –í–∞–ª–∏–¥–∞—Ü–∏—è API –∫–ª—é—á–∞
        if not self.api_key:
            raise ValueError("API –∫–ª—é—á –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ä–æ–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞")

    def get_search_context(self) -> Dict[str, Any]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π.

        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–∏—Å–∫–∞
        """
        return {
            "tags": self.knowledge_tags,
            "domain": self.knowledge_domain,
            "match_count": self.knowledge_match_count
        }

    def to_dict(self) -> Dict[str, Any]:
        """
        –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.

        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ (–±–µ–∑ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
        """
        return {
            "agent_name": self.agent_name,
            "agent_type": self.agent_type,
            "domain_type": self.domain_type,
            "project_type": self.project_type,
            "framework": self.framework,
            "knowledge_tags": self.knowledge_tags,
            "knowledge_domain": self.knowledge_domain,
            "session_id": self.session_id
        }


# ============================================================================
# –≠–ö–°–ü–û–†–¢
# ============================================================================

__all__ = [
    "[AGENT_NAME_PASCAL]Dependencies",
    "AGENT_NAME",
    "DEFAULT_KNOWLEDGE_TAGS",
    "DEFAULT_KNOWLEDGE_DOMAIN",
    "DEFAULT_ARCHON_PROJECT_ID"
]
