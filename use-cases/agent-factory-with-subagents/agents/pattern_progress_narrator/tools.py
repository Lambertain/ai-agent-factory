"""
–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è Pattern Progress Narrator Agent
"""

import uuid
from typing import List, Dict, Any, Optional
from pydantic_ai import RunContext

from .dependencies import PatternProgressNarratorDependencies
from .models import (
    ProgressNarrative,
    NarrativeType,
    EmotionalTone,
    ProgressMetric,
    UserMilestone,
    ChallengeReframe,
    MomentumIndicators,
    HeroJourneyStage,
    TransformationJourneyMap
)


async def create_progress_narrative(
    ctx: RunContext[PatternProgressNarratorDependencies],
    narrative_type: str,
    day_number: int,
    progress_data: Dict[str, Any],
    emotional_tone: str = "motivating"
) -> str:
    """
    –°–æ–∑–¥–∞—Ç—å –Ω–∞—Ä—Ä–∞—Ç–∏–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        narrative_type: –¢–∏–ø –Ω–∞—Ä—Ä–∞—Ç–∏–≤–∞ (hero_journey, transformation, milestone_celebration, etc.)
        day_number: –î–µ–Ω—å –ø—Ä–æ–≥—Ä–∞–º–º—ã (1-21)
        progress_data: –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        emotional_tone: –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è

    Returns:
        –°–æ–∑–¥–∞–Ω–Ω—ã–π –Ω–∞—Ä—Ä–∞—Ç–∏–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    """

    narrative_id = f"narr_{uuid.uuid4().hex[:8]}"
    user_name = ctx.deps.user_name or "–¥—Ä—É–≥"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞
    narrative_templates = {
        "hero_journey": {
            "title": f"–î–µ–Ω—å {day_number}: –¢–≤–æ–π –ø—É—Ç—å –≥–µ—Ä–æ—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è",
            "opening": f"{user_name}, –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Ç–≤–æ–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è - —ç—Ç–æ –Ω–æ–≤–∞—è –≥–ª–∞–≤–∞ –≤ —Ç–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        },
        "transformation": {
            "title": f"–¢–≤–æ—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è: –î–µ–Ω—å {day_number}",
            "opening": f"–ü–æ—Å–º–æ—Ç—Ä–∏, {user_name}, –∫–∞–∫ —Ç—ã –º–µ–Ω—è–µ—à—å—Å—è..."
        },
        "milestone_celebration": {
            "title": f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –î–µ–Ω—å {day_number}",
            "opening": f"{user_name}, —Å–µ–≥–æ–¥–Ω—è –æ—Å–æ–±–µ–Ω–Ω—ã–π –¥–µ–Ω—å - —Ç—ã –¥–æ—Å—Ç–∏–≥ –≤–∞–∂–Ω–æ–π –≤–µ—Ö–∏!"
        },
        "overcoming_challenge": {
            "title": f"–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ: –î–µ–Ω—å {day_number}",
            "opening": f"{user_name}, –ø–æ–º–Ω–∏—à—å –∫–∞–∫ –±—ã–ª–æ —Å–ª–æ–∂–Ω–æ? –ê —Ç–µ–ø–µ—Ä—å –ø–æ—Å–º–æ—Ç—Ä–∏..."
        },
        "momentum_building": {
            "title": f"–¢–≤–æ–π –∏–º–ø—É–ª—å—Å —Ä–∞—Å—Ç–µ—Ç: –î–µ–Ω—å {day_number}",
            "opening": f"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å, {user_name}, —Ç—ã —Å–æ–∑–¥–∞–µ—à—å —Å–∏–ª—É, –∫–æ—Ç–æ—Ä–∞—è –≤–µ–¥–µ—Ç —Ç–µ–±—è –≤–ø–µ—Ä–µ–¥."
        },
        "reflection": {
            "title": f"–ú–æ–º–µ–Ω—Ç —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏: –î–µ–Ω—å {day_number}",
            "opening": f"–î–∞–≤–∞–π –æ—Å—Ç–∞–Ω–æ–≤–∏–º—Å—è –Ω–∞ –º–≥–Ω–æ–≤–µ–Ω–∏–µ, {user_name}, –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π –ø—É—Ç—å..."
        }
    }

    template = narrative_templates.get(narrative_type, narrative_templates["transformation"])

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    progress_summary = ""
    if progress_data.get("metrics"):
        improvements = []
        for metric in progress_data["metrics"]:
            if metric.get("improvement_percentage", 0) > 0:
                improvements.append(f"- {metric['metric_name']}: +{metric['improvement_percentage']:.0f}%")

        if improvements:
            progress_summary = "**–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ —Ü–∏—Ñ—Ä–∞—Ö:**\n" + "\n".join(improvements)

    # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∞—Ñ–æ—Ä—É –ø—É—Ç–∏ –≥–µ—Ä–æ—è
    hero_stage = progress_data.get("hero_journey_stage", "crossing_threshold")
    metaphor = ctx.deps.storytelling_db.heros_journey_stages.get(hero_stage, "–¢–≤–æ–π –ø—É—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
    next_step = progress_data.get("next_action", f"–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–æ–≥—Ä–∞–º–º—É Day {day_number + 1}")

    body = f"""
{template['opening']}

{progress_summary}

**–ì–¥–µ —Ç—ã —Å–µ–π—á–∞—Å –Ω–∞ –ø—É—Ç–∏ –≥–µ—Ä–æ—è:**
{metaphor}

**–ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç:**
–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—à—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è - —Ç—ã –ø—Ä–æ—Ö–æ–¥–∏—à—å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ. –ö–∞–∂–¥—ã–π —à–∞–≥ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ.

**–¢–≤–æ–π —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥:**
{next_step}

–ü–æ–º–Ω–∏: –≤–µ–ª–∏–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –º–∞–ª—ã—Ö, –Ω–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤. –¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏! üåü
"""

    result = f"""
‚úÖ **–°–æ–∑–¥–∞–Ω –Ω–∞—Ä—Ä–∞—Ç–∏–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞**

**ID:** {narrative_id}
**–¢–∏–ø:** {narrative_type}
**–î–µ–Ω—å:** {day_number}
**–¢–æ–Ω:** {emotional_tone}

**–ó–∞–≥–æ–ª–æ–≤–æ–∫:** {template['title']}

**–ö–æ–Ω—Ç–µ–Ω—Ç:**
{body}
"""

    return result


async def reframe_challenge(
    ctx: RunContext[PatternProgressNarratorDependencies],
    challenge_description: str,
    context: Dict[str, Any] = None
) -> str:
    """
    –†–µ—Ñ—Ä–µ–π–º–∏—Ä–æ–≤–∞—Ç—å –≤—ã–∑–æ–≤/–Ω–µ—É–¥–∞—á—É –≤ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—É—á–µ–Ω–∏—è.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        challenge_description: –û–ø–∏—Å–∞–Ω–∏–µ –≤—ã–∑–æ–≤–∞ –∏–ª–∏ –Ω–µ—É–¥–∞—á–∏
        context: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç

    Returns:
        –†–µ—Ñ—Ä–µ–π–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–º –Ω–∞—É—á–µ–Ω–∏–µ–º
    """

    reframe_id = f"ref_{uuid.uuid4().hex[:6]}"

    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º—É–ª—É —Ä–µ—Ñ—Ä–µ–π–º–∏–Ω–≥–∞
    reframing_steps = {
        "acknowledge": f"–Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ {challenge_description.lower()} –±—ã–ª–æ –Ω–µ–ø—Ä–æ—Å—Ç–æ.",
        "normalize": "–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏. –°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ - —Å–∏–≥–Ω–∞–ª —Ä–æ—Å—Ç–∞.",
        "extract_learning": "–ò–∑ —ç—Ç–æ–≥–æ –æ–ø—ã—Ç–∞ —Ç—ã —É–∑–Ω–∞–ª –≤–∞–∂–Ω–æ–µ –æ —Å–µ–±–µ: —Å–≤–æ–∏ –≥—Ä–∞–Ω–∏—Ü—ã, —Ç—Ä–∏–≥–≥–µ—Ä—ã, –∏ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å.",
        "identify_growth": "–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ –±–æ–ª–µ–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ.",
        "next_action": "–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –ø–æ–ø—Ä–æ–±—É–µ–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∏–ª–∏ –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥."
    }

    result = f"""
üîÑ **–†–µ—Ñ—Ä–µ–π–º–∏–Ω–≥ –≤—ã–∑–æ–≤–∞**

**ID:** {reframe_id}
**–û—Ä–∏–≥–∏–Ω–∞–ª:** {challenge_description}

**–†–µ—Ñ—Ä–µ–π–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞:**

1. **–ü—Ä–∏–∑–Ω–∞–Ω–∏–µ:** {reframing_steps['acknowledge']}

2. **–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è:** {reframing_steps['normalize']}

3. **–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞—É—á–µ–Ω–∏—è:** {reframing_steps['extract_learning']}

4. **–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–æ—Å—Ç–∞:** {reframing_steps['identify_growth']}

5. **–°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:** {reframing_steps['next_action']}

**–ù–æ–≤—ã–π —Ñ—Ä–µ–π–º:**
"{challenge_description}" ‚Üí "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—É—á–∏—Ç—å—Å—è –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è"

üí° **–ü–æ–º–Ω–∏:** –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ - —ç—Ç–æ —É—á–∏—Ç–µ–ª—å. –ù–µ—É–¥–∞—á–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ feedback.
"""

    return result


async def generate_momentum_message(
    ctx: RunContext[PatternProgressNarratorDependencies],
    momentum_data: Dict[str, Any]
) -> str:
    """
    –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∏–º–ø—É–ª—å—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        momentum_data: –î–∞–Ω–Ω—ã–µ –æ–± –∏–º–ø—É–ª—å—Å–µ (consistency, engagement, completion)

    Returns:
        –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∏–º–ø—É–ª—å—Å–∞
    """

    consistency_score = momentum_data.get("consistency_score", 0.5)
    engagement_level = momentum_data.get("engagement_level", 0.5)
    completion_rate = momentum_data.get("completion_rate", 0.5)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∏–º–ø—É–ª—å—Å–∞
    momentum_level = (consistency_score + engagement_level + completion_rate) / 3

    if momentum_level >= 0.8:
        message_type = "high_momentum"
        emoji = "üöÄ"
        tone = "celebratory"
    elif momentum_level >= 0.6:
        message_type = "good_momentum"
        emoji = "‚ú®"
        tone = "encouraging"
    elif momentum_level >= 0.4:
        message_type = "building_momentum"
        emoji = "üå±"
        tone = "supportive"
    else:
        message_type = "need_boost"
        emoji = "üí™"
        tone = "motivating"

    messages = {
        "high_momentum": {
            "title": f"{emoji} –¢–≤–æ–π –∏–º–ø—É–ª—å—Å –Ω–µ–≤–µ—Ä–æ—è—Ç–µ–Ω!",
            "body": f"""
–¢—ã –≤ –ø–æ—Ç—Ä—è—Å–∞—é—â–µ–π —Ñ–æ—Ä–º–µ! Consistency: {consistency_score * 100:.0f}%, engagement: {engagement_level * 100:.0f}%.

–≠—Ç–æ —Ç–æ, —á—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è momentum - —Å–∏–ª–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç –∫–∞–∂–¥—ã–π —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –ª–µ–≥—á–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ.

**–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:**
- –¢–≤–æ–π –º–æ–∑–≥ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ –ø—É—Ç–∏
- –ü—Ä–∏–≤—ã—á–∫–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏
- –ú–æ—Ç–∏–≤–∞—Ü–∏—è —Ä–∞—Å—Ç–µ—Ç from doing, –Ω–µ –Ω–∞–æ–±–æ—Ä–æ—Ç

**–ü—Ä–æ–¥–æ–ª–∂–∞–π:**
–ü—Ä–æ—Å—Ç–æ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è. –°–µ–π—á–∞—Å momentum —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ç–µ–±—è.
"""
        },
        "good_momentum": {
            "title": f"{emoji} –û—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å!",
            "body": f"""
–£ —Ç–µ–±—è —Å—Ç–∞–±–∏–ª—å–Ω—ã–π momentum: consistency {consistency_score * 100:.0f}%.

**–¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏:**
–†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å –≤–∞–∂–Ω–µ–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏. –¢—ã –¥–µ–ª–∞–µ—à—å –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ.

**–ß—Ç–æ–±—ã —É—Å–∏–ª–∏—Ç—å momentum:**
- –ü—Ä–æ–¥–æ–ª–∂–∞–π –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å up –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
- Celebrate –º–∞–ª—ã–µ –ø–æ–±–µ–¥—ã
- –¢—Ä–µ–∫ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å

–¢—ã —Å–æ–∑–¥–∞–µ—à—å —á—Ç–æ-—Ç–æ —É—Å—Ç–æ–π—á–∏–≤–æ–µ! ‚ú®
"""
        },
        "building_momentum": {
            "title": f"{emoji} Momentum –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞—Å—Ç–∏",
            "body": f"""
–¢—ã –∑–∞–∫–ª–∞–¥—ã–≤–∞–µ—à—å —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç: {consistency_score * 100:.0f}% consistency.

**–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ:**
–ù–∞—á–∞–ª–æ –≤—Å–µ–≥–¥–∞ —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ effort. Momentum –µ—â–µ –Ω–µ –Ω–∞–±—Ä–∞–Ω, –Ω–æ —Ç—ã –¥–≤–∏–∂–µ—à—å—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏.

**–§–æ–∫—É—Å –Ω–∞:**
- –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å up, –¥–∞–∂–µ –∫–æ–≥–¥–∞ —Ç—Ä—É–¥–Ω–æ
- –ú–∞–ª—ã–µ consistent actions
- –û–¥–∏–Ω –¥–µ–Ω—å –∑–∞ —Ä–∞–∑

–°–∫–æ—Ä–æ —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥—á–µ - –æ–±–µ—â–∞—é! üå±
"""
        },
        "need_boost": {
            "title": f"{emoji} –í—Ä–µ–º—è –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å momentum",
            "body": f"""
–Ø –≤–∏–∂—É, –±—ã–ª–æ challenging –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è (consistency: {consistency_score * 100:.0f}%).

**–•–æ—Ä–æ—à–∏–µ –Ω–æ–≤–æ—Å—Ç–∏:**
Momentum –º–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å. –í—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ - –Ω–∞—á–∞—Ç—å again.

**–¢–≤–æ–π –ø–ª–∞–Ω:**
1. –í—ã–±–µ—Ä–∏ —Å–∞–º–æ–µ –ø—Ä–æ—Å—Ç–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
2. –°–¥–µ–ª–∞–π –µ–≥–æ —Å–µ–≥–æ–¥–Ω—è
3. –ü–æ–≤—Ç–æ—Ä–∏ –∑–∞–≤—Ç—Ä–∞
4. Momentum –≤–µ—Ä–Ω–µ—Ç—Å—è

–¢—ã –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—à—å —Å –Ω—É–ª—è - –≤–µ—Å—å –æ–ø—ã—Ç —Å —Ç–æ–±–æ–π. –ü—Ä–æ—Å—Ç–æ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥. üí™
"""
        }
    }

    selected_message = messages[message_type]

    result = f"""
{selected_message['title']}

{selected_message['body']}

**–¢–≤–æ–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ momentum:**
- Consistency: {consistency_score * 100:.0f}%
- Engagement: {engagement_level * 100:.0f}%
- Completion: {completion_rate * 100:.0f}%

Momentum level: {momentum_level * 100:.0f}% - {"–û—Ç–ª–∏—á–Ω–æ!" if momentum_level >= 0.7 else "–†–∞—Å—Ç–µ—Ç!" if momentum_level >= 0.5 else "–í –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è"}
"""

    return result


async def create_anticipation_builder(
    ctx: RunContext[PatternProgressNarratorDependencies],
    current_day: int,
    upcoming_content: Dict[str, Any]
) -> str:
    """
    –°–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–∑–¥–∞—é—â–µ–µ –ø—Ä–µ–¥–≤–∫—É—à–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–æ–≤.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        current_day: –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å –ø—Ä–æ–≥—Ä–∞–º–º—ã
        upcoming_content: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ

    Returns:
        –°–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–∑–¥–∞—é—â–µ–µ anticipation
    """

    next_day = current_day + 1
    days_remaining = 21 - current_day

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –≤–µ—Ö–∏ –≤–ø–µ—Ä–µ–¥–∏
    milestones_ahead = []
    if next_day == 7:
        milestones_ahead.append("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –Ω–µ–¥–µ–ª–∏ - –ø–µ—Ä–≤–∞—è –≤–∞–∂–Ω–∞—è –≤–µ—Ö–∞")
    if next_day == 14:
        milestones_ahead.append("–°–µ—Ä–µ–¥–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã - –≤—Ä–µ–º—è –≥–ª—É–±–æ–∫–æ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏")
    if next_day == 21:
        milestones_ahead.append("–§–∏–Ω–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π")

    upcoming_module = upcoming_content.get("module_name", f"Day {next_day} Module")
    upcoming_technique = upcoming_content.get("technique", "–Ω–æ–≤–∞—è –º–æ—â–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞")

    result = f"""
üîÆ **–ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç –≤–ø–µ—Ä–µ–¥–∏**

**–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: Day {next_day}**
{upcoming_module}

**–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ:**
–¢—ã –±—É–¥–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å {upcoming_technique} - —ç—Ç–æ —Å–ª–µ–¥—É—é—â–∏–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —à–∞–≥ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã —É–∂–µ –æ—Å–≤–æ–∏–ª.

**–ü—Ä–µ–¥–≤–∫—É—à–µ–Ω–∏–µ:**
{"üéØ " + milestones_ahead[0] if milestones_ahead else "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"}

**–ï—â–µ –≤–ø–µ—Ä–µ–¥–∏:**
- {days_remaining} –¥–Ω–µ–π —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è
- –ù–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ –∏ –∏–Ω—Å–∞–π—Ç—ã
- –†–∞—Å—Ç—É—â–∞—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å –∏ —Å–∏–ª–∞
- –í–µ—Ä—Å–∏—è —Å–µ–±—è, –æ –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –º–µ—á—Ç–∞–µ—à—å

**–ò–Ω—Ç—Ä–∏–≥–∞:**
–¢–æ, —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å –≤ –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏, –∏–∑–º–µ–Ω–∏—Ç —Ç–≤–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ... –Ω–æ —è –Ω–µ –±—É–¥—É —Å–ø–æ–π–ª–µ—Ä–∏—Ç—å. –¢—ã —É–≤–∏–¥–∏—à—å —Å–∞–º üòä

**–¢–≤–æ–π —Å–ª–µ–¥—É—é—â–∏–π move:**
–ü—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–π Day {next_day}, –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤. Momentum —Ç–µ–±—è –ø–æ–Ω–µ—Å–µ—Ç.

‚ú® –õ—É—á—à–µ–µ –µ—â–µ –≤–ø–µ—Ä–µ–¥–∏!
"""

    return result


async def search_agent_knowledge(
    ctx: RunContext[PatternProgressNarratorDependencies],
    query: str,
    match_count: int = 5
) -> str:
    """
    –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π Pattern Progress Narrator Agent —á–µ—Ä–µ–∑ Archon RAG.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        query: –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        match_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    Returns:
        –ù–∞–π–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    """

    search_tags = ctx.deps.knowledge_tags

    try:
        return f"""
üîç **–ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π Pattern Progress Narrator**

**–ó–∞–ø—Ä–æ—Å:** {query}
**–¢–µ–≥–∏:** {', '.join(search_tags)}
**–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:** {match_count}

–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –≤ Archon.

üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª knowledge/pattern_progress_narrator_knowledge.md –≤ Archon Knowledge Base.
"""

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π: {e}"


__all__ = [
    "create_progress_narrative",
    "reframe_challenge",
    "generate_momentum_message",
    "create_anticipation_builder",
    "search_agent_knowledge"
]
