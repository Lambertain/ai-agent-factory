"""
–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è Pattern Safety Protocol Agent
"""

import uuid
from typing import List, Dict, Any, Optional
from pydantic_ai import RunContext

from .dependencies import PatternSafetyProtocolDependencies
from .models import (
    RiskAssessment,
    RiskLevel,
    RiskCategory,
    Contraindication,
    ContraindicationType,
    EscalationAction,
    SafetyCheckResult,
    CrisisIndicator,
    SafetyProtocol
)


async def assess_user_risk(
    ctx: RunContext[PatternSafetyProtocolDependencies],
    user_data: Dict[str, Any],
    data_sources: List[str] = None
) -> str:
    """
    –û—Ü–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        user_data: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (feedback, behavior, responses)
        data_sources: –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ü–µ–Ω–∫–∏

    Returns:
        –°—Ç—Ä–æ–∫–∞ —Å –æ—Ü–µ–Ω–∫–æ–π —Ä–∏—Å–∫–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    """

    assessment_id = f"risk_{uuid.uuid4().hex[:8]}"

    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Ä–∏—Å–∫–∞
    risk_indicators_db = ctx.deps.risk_indicators_db

    detected_risks = []
    risk_level = RiskLevel.MINIMAL
    recommended_actions = []

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
    user_text = " ".join([
        str(user_data.get("feedback", "")),
        str(user_data.get("responses", "")),
        str(user_data.get("notes", ""))
    ]).lower()

    suicidal_count = sum(
        1 for indicator in risk_indicators_db.suicidal_indicators
        if any(keyword in user_text for keyword in indicator.lower().split())
    )

    if suicidal_count >= 3:
        detected_risks.append(RiskCategory.SUICIDAL)
        risk_level = RiskLevel.CRITICAL
        recommended_actions.extend([
            EscalationAction.IMMEDIATE_REFERRAL,
            EscalationAction.CRISIS_RESOURCES,
            EscalationAction.EMERGENCY_PROTOCOL
        ])
    elif suicidal_count >= 1:
        detected_risks.append(RiskCategory.SUICIDAL)
        risk_level = RiskLevel.HIGH if risk_level == RiskLevel.MINIMAL else risk_level
        recommended_actions.extend([
            EscalationAction.CRISIS_RESOURCES,
            EscalationAction.MONITOR_CLOSELY
        ])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∫—Ä–∏–∑–∏—Å–∞
    crisis_count = sum(
        1 for indicator in risk_indicators_db.crisis_indicators
        if any(keyword in user_text for keyword in indicator.lower().split())
    )

    if crisis_count >= 2:
        detected_risks.append(RiskCategory.CRISIS)
        if risk_level in [RiskLevel.MINIMAL, RiskLevel.LOW]:
            risk_level = RiskLevel.HIGH

        recommended_actions.extend([
            EscalationAction.PAUSE_PROGRAM,
            EscalationAction.CRISIS_RESOURCES
        ])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è
    self_harm_count = sum(
        1 for indicator in risk_indicators_db.self_harm_indicators
        if any(keyword in user_text for keyword in indicator.lower().split())
    )

    if self_harm_count >= 1:
        detected_risks.append(RiskCategory.SELF_HARM)
        if risk_level in [RiskLevel.MINIMAL, RiskLevel.LOW]:
            risk_level = RiskLevel.MODERATE

        recommended_actions.append(EscalationAction.MONITOR_CLOSELY)

    # –ï—Å–ª–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤—ã—Å–æ–∫–∏—Ö —Ä–∏—Å–∫–æ–≤
    if not detected_risks:
        risk_level = RiskLevel.LOW
        explanation = "–û—Ü–µ–Ω–∫–∞ –Ω–µ –≤—ã—è–≤–∏–ª–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Ä–∏—Å–∫–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –æ–±—ã—á–Ω—ã–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º."
    else:
        explanation = f"–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞: {', '.join([r.value for r in detected_risks])}. –¢—Ä–µ–±—É—é—Ç—Å—è –º–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result = f"""
‚úÖ **–û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞**

**ID –æ—Ü–µ–Ω–∫–∏:** {assessment_id}
**–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:** {risk_level.value.upper()}
**–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∏—Å–∫–æ–≤:** {', '.join([r.value for r in detected_risks]) if detected_risks else '–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'}

**–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**
{explanation}

**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**
{chr(10).join([f"- {action.value}" for action in set(recommended_actions)]) if recommended_actions else "- –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—ã—á–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"}

**–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö:** {', '.join(data_sources) if data_sources else 'user_data'}
"""

    return result


async def check_technique_contraindications(
    ctx: RunContext[PatternSafetyProtocolDependencies],
    technique_name: str,
    user_conditions: List[str]
) -> str:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Ç–µ—Ö–Ω–∏–∫–∏.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        technique_name: –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ (hypnosis, breathwork, visualization, etc.)
        user_conditions: –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ/–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è—Ö –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    """

    contraindications_db = ctx.deps.contraindications_db

    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏
    technique_key = technique_name.lower().replace(" ", "_")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è
    absolute_contraindications = []
    if technique_key in contraindications_db.absolute_contraindications:
        for condition in contraindications_db.absolute_contraindications[technique_key]:
            if any(user_cond.lower() in condition.lower() for user_cond in user_conditions):
                absolute_contraindications.append(condition)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è
    relative_contraindications = []
    if technique_key in contraindications_db.relative_contraindications:
        for condition in contraindications_db.relative_contraindications[technique_key]:
            if any(user_cond.lower() in condition.lower() for user_cond in user_conditions):
                relative_contraindications.append(condition)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è
    temporary_contraindications = [
        cond for cond in contraindications_db.temporary_contraindications
        if any(user_cond.lower() in cond.lower() for user_cond in user_conditions)
    ]

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if absolute_contraindications:
        recommendation = f"‚õî **–¢–ï–•–ù–ò–ö–ê –ü–†–û–¢–ò–í–û–ü–û–ö–ê–ó–ê–ù–ê** - –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é —Ç–µ—Ö–Ω–∏–∫—É."
        safe_to_use = False
    elif relative_contraindications:
        recommendation = f"‚ö†Ô∏è **–¢–†–ï–ë–£–ï–¢–°–Ø –ê–î–ê–ü–¢–ê–¶–ò–Ø** - –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è. –¢–µ—Ö–Ω–∏–∫–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏."
        safe_to_use = True
    elif temporary_contraindications:
        recommendation = f"‚è∏Ô∏è **–í–†–ï–ú–ï–ù–ù–û –ü–†–û–¢–ò–í–û–ü–û–ö–ê–ó–ê–ù–û** - –¥–æ–∂–¥–∏—Ç–µ—Å—å —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–µ—Ö–Ω–∏–∫–∏."
        safe_to_use = False
    else:
        recommendation = f"‚úÖ **–ë–ï–ó–û–ü–ê–°–ù–û** - –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã. –¢–µ—Ö–Ω–∏–∫–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è."
        safe_to_use = True

    result = f"""
üîç **–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏–π –¥–ª—è —Ç–µ—Ö–Ω–∏–∫–∏ "{technique_name}"**

**–°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {', '.join(user_conditions)}

**–ê–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è:**
{chr(10).join([f"- {c}" for c in absolute_contraindications]) if absolute_contraindications else "–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"}

**–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è (—Ç—Ä–µ–±—É—é—Ç –∞–¥–∞–ø—Ç–∞—Ü–∏–∏):**
{chr(10).join([f"- {c}" for c in relative_contraindications]) if relative_contraindications else "–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"}

**–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è:**
{chr(10).join([f"- {c}" for c in temporary_contraindications]) if temporary_contraindications else "–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"}

{recommendation}

**–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏–∫—É:** {'–î–∞' if safe_to_use else '–ù–µ—Ç'}
"""

    return result


async def check_pharmacological_interactions(
    ctx: RunContext[PatternSafetyProtocolDependencies],
    medications: List[str],
    planned_techniques: List[str]
) -> str:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Å–∏—Ö–æ—Ç–µ—Ö–Ω–∏–∫–∞–º–∏.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        medications: –°–ø–∏—Å–æ–∫ –ø—Ä–∏–Ω–∏–º–∞–µ–º—ã—Ö –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–≤
        planned_techniques: –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏

    Returns:
        –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è—Ö –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    """

    pharmacological_db = ctx.deps.pharmacological_interactions_db
    detected_interactions = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫–ª–∞—Å—Å –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–≤
    for med_class, med_data in pharmacological_db.medication_interactions.items():
        for med_type, details in med_data.items():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã –∏–∑ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞
            user_takes_medication = any(
                any(med.lower() in user_med.lower() for user_med in medications)
                for med in details.get("medications", [])
            )

            if user_takes_medication:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–º–∏ —Ç–µ—Ö–Ω–∏–∫–∞–º–∏
                for interaction in details.get("interactions", []):
                    technique = interaction.get("technique", "")
                    if any(planned_tech.lower() in technique.lower() for planned_tech in planned_techniques):
                        detected_interactions.append({
                            "medication_class": f"{med_class} - {med_type}",
                            "technique": technique,
                            "risk": interaction.get("risk", "unknown"),
                            "description": interaction.get("description", ""),
                            "recommendation": interaction.get("recommendation", "")
                        })

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if not detected_interactions:
        result = f"""
‚úÖ **–§–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã**

**–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã:** {', '.join(medications)}
**–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏:** {', '.join(planned_techniques)}

–ù–µ—Ç –∑–Ω–∞—á–∏–º—ã—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –º–µ–∂–¥—É –ø—Ä–∏–Ω–∏–º–∞–µ–º—ã–º–∏ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∞–º–∏ –∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–º–∏ –ø—Å–∏—Ö–æ—Ç–µ—Ö–Ω–∏–∫–∞–º–∏.

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –¢–µ—Ö–Ω–∏–∫–∏ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ.
"""
    else:
        interactions_text = []
        for interaction in detected_interactions:
            risk_emoji = {
                "high": "üî¥",
                "moderate": "üü°",
                "low": "üü¢"
            }.get(interaction["risk"], "‚ö™")

            interactions_text.append(f"""
{risk_emoji} **{interaction['medication_class']}** ‚Üî **{interaction['technique']}**
- –†–∏—Å–∫: {interaction['risk']}
- –û–ø–∏—Å–∞–Ω–∏–µ: {interaction['description']}
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {interaction['recommendation']}
""")

        result = f"""
‚ö†Ô∏è **–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è**

**–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã:** {', '.join(medications)}
**–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏:** {', '.join(planned_techniques)}

**–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:**
{''.join(interactions_text)}

**–í–∞–∂–Ω–æ:** –ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –ª–µ—á–∞—â–∏–º –≤—Ä–∞—á–æ–º –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç—Ç–∏—Ö —Ç–µ—Ö–Ω–∏–∫.
"""

    return result


async def generate_crisis_response(
    ctx: RunContext[PatternSafetyProtocolDependencies],
    risk_category: str,
    severity: str = "high"
) -> str:
    """
    –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫—Ä–∏–∑–∏—Å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        risk_category: –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∏—Å–∫–∞ (suicidal, self_harm, crisis, trauma_trigger)
        severity: –£—Ä–æ–≤–µ–Ω—å —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏ (low, moderate, high, critical)

    Returns:
        –ü—Ä–æ—Ç–æ–∫–æ–ª –æ—Ç–≤–µ—Ç–∞ —Å –∫—Ä–∏–∑–∏—Å–Ω—ã–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏
    """

    crisis_resources = ctx.deps.crisis_resources

    protocol_id = f"protocol_{uuid.uuid4().hex[:6]}"

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∏—Å–∫–∞
    if risk_category == "suicidal":
        communication_script = """
–Ø –≤–∏–∂—É, —á—Ç–æ –≤–∞–º —Å–µ–π—á–∞—Å –æ—á–µ–Ω—å —Ç—è–∂–µ–ª–æ. –≠—Ç–æ –≤–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç - –≤—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∑–∞ –ø–æ–º–æ—â—å—é.

**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–Ω–∞–π—Ç–µ:**
- –¢–æ, —á—Ç–æ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–π—á–∞—Å, –≤—Ä–µ–º–µ–Ω–Ω–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –∫–∞–∂–µ—Ç—Å—è –≤–µ—á–Ω—ã–º
- –ï—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –æ–±–ª–µ–≥—á–∏—Ç—å –≤–∞—à—É –±–æ–ª—å
- –í—ã –Ω–µ –æ–¥–∏–Ω–æ–∫–∏ –≤ —ç—Ç–æ–º - –º–Ω–æ–≥–∏–µ –ø—Ä–æ—à–ª–∏ —á–µ—Ä–µ–∑ –ø–æ–¥–æ–±–Ω–æ–µ –∏ –Ω–∞—à–ª–∏ –≤—ã—Ö–æ–¥

**–ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**
1. –ï—Å–ª–∏ –µ—Å—Ç—å immediate danger - –∑–≤–æ–Ω–∏—Ç–µ 112 –∏–ª–∏ 103
2. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è
3. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –±–ª–∏–∑–∫–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
4. –£–±–µ—Ä–∏—Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –∏–∑ –¥–æ—Å—Ç—É–ø–∞
"""

        resources = crisis_resources.crisis_hotlines["russia"] + [
            {
                "name": "–°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å",
                "phone": crisis_resources.emergency_services["medical_emergency"],
                "available": "24/7",
                "description": "–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å"
            }
        ]

    elif risk_category == "self_harm":
        communication_script = """
–Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Å–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∫–∞–∑–∞—Ç—å—Å—è —Å–ø–æ—Å–æ–±–æ–º —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –±–æ–ª—å—é. –ù–æ –µ—Å—Ç—å –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã.

**–í–º–µ—Å—Ç–æ —Å–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:**
- –°–∂–∞—Ç—å –∫—É—Å–æ—á–µ–∫ –ª—å–¥–∞ –≤ —Ä—É–∫–µ
- –†–µ–∑–∫–æ —Ö–ª–æ–ø–Ω—É—Ç—å —Ä–µ–∑–∏–Ω–∫–æ–π –ø–æ –∑–∞–ø—è—Å—Ç—å—é
- –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—É—é —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
- –ù–∞–ø–∏—Å–∞—Ç—å –æ —á—É–≤—Å—Ç–≤–∞—Ö –∏–ª–∏ –ø–æ—Ä–≤–∞—Ç—å –±—É–º–∞–≥—É

**–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è:**
1. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
2. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç–µ—Ä–∞–ø–µ–≤—Ç—É –∏–ª–∏ –ø—Å–∏—Ö–∏–∞—Ç—Ä—É
3. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≥–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –≤—ã—Å–æ–∫–æ–º —Ä–∏—Å–∫–µ
"""

        resources = crisis_resources.crisis_hotlines["russia"]

    elif risk_category == "crisis":
        communication_script = """
–í—ã –ø–µ—Ä–µ–∂–∏–≤–∞–µ—Ç–µ –æ—Å—Ç—Ä—ã–π –∫—Ä–∏–∑–∏—Å. –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π —Å—Ç—Ä–µ—Å—Å.

**–°–µ–π—á–∞—Å –≤–∞–∂–Ω–æ:**
1. –û–±–µ—Å–ø–µ—á–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (—Ñ–∏–∑–∏—á–µ—Å–∫—É—é –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é)
2. –ü–æ–ª—É—á–∏—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É
3. –ù–µ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ
4. –û—Ç–ª–æ–∂–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è

**–ö—Ä–∏–∑–∏—Å –≤—Ä–µ–º–µ–Ω–Ω—ã–π** - —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â—å—é –≤—ã –ø—Ä–æ–π–¥–µ—Ç–µ —á–µ—Ä–µ–∑ —ç—Ç–æ.
"""

        resources = crisis_resources.crisis_hotlines["russia"] + crisis_resources.online_resources

    else:  # trauma_trigger –∏–ª–∏ –¥—Ä—É–≥–∏–µ
        communication_script = """
–í—ã –∏—Å–ø—ã—Ç–∞–ª–∏ —Ç—Ä–∏–≥–≥–µ—Ä —Ç—Ä–∞–≤–º—ã. –≠—Ç–æ –Ω–µ –≤–∞—à–∞ –≤–∏–Ω–∞, –∏ —ç—Ç–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç.

**–¢–µ—Ö–Ω–∏–∫–∏ grounding (–∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å):**
1. 5-4-3-2-1: –ù–∞–∑–æ–≤–∏—Ç–µ 5 –≤–µ—â–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤–∏–¥–∏—Ç–µ, 4 - –∫–æ—Ç–æ—Ä—ã–µ —Å–ª—ã—à–∏—Ç–µ, 3 - –∫–æ—Ç–æ—Ä—ã–µ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ, 2 - –∫–æ—Ç–æ—Ä—ã–µ –Ω—é—Ö–∞–µ—Ç–µ, 1 - –∫–æ—Ç–æ—Ä—É—é –ø—Ä–æ–±—É–µ—Ç–µ
2. –§–∏–∑–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–∞–∫—Ç —Å –∑–µ–º–ª–µ–π: –ø–æ—á—É–≤—Å—Ç–≤—É–π—Ç–µ –Ω–æ–≥–∏ –Ω–∞ –ø–æ–ª—É
3. –•–æ–ª–æ–¥–Ω–∞—è –≤–æ–¥–∞ –Ω–∞ –ª–∏—Ü–æ –∏–ª–∏ —Ä—É–∫–∏
4. –ú–µ–¥–ª–µ–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ: 4 —Å—á–µ—Ç–∞ –≤–¥–æ—Ö, 4 –∑–∞–¥–µ—Ä–∂–∫–∞, 4 –≤—ã–¥–æ—Ö

**–ï—Å–ª–∏ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç** - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç—Ä–∞–≤–º–∞-—Ç–µ—Ä–∞–ø–µ–≤—Ç—É.
"""

        resources = crisis_resources.online_resources

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ—Å—É—Ä—Å—ã
    resources_text = []
    for resource in resources:
        if "phone" in resource:
            resources_text.append(f"**{resource['name']}**\n–¢–µ–ª–µ—Ñ–æ–Ω: {resource['phone']}\n–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: {resource['available']}\n{resource['description']}")
        else:
            resources_text.append(f"**{resource['name']}**\n{resource.get('url', resource.get('website', ''))}\n{resource['description']}")

    result = f"""
üö® **–ü–†–û–¢–û–ö–û–õ –ö–†–ò–ó–ò–°–ù–û–ì–û –†–ï–ê–ì–ò–†–û–í–ê–ù–ò–Ø**

**ID –ø—Ä–æ—Ç–æ–∫–æ–ª–∞:** {protocol_id}
**–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {risk_category}
**–£—Ä–æ–≤–µ–Ω—å —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏:** {severity}

---

{communication_script}

---

**üìû –†–ï–°–£–†–°–´ –ü–û–ú–û–©–ò:**

{chr(10).join(resources_text)}

---

**‚ö†Ô∏è –í–ê–ñ–ù–û:**
- –≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ù–ï –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å
- –ü—Ä–∏ –∫—Ä–∏–∑–∏—Å–µ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º
- –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
"""

    return result


async def assess_vulnerable_group(
    ctx: RunContext[PatternSafetyProtocolDependencies],
    user_profile: Dict[str, Any]
) -> str:
    """
    –û—Ü–µ–Ω–∏—Ç—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —É—è–∑–≤–∏–º–æ–π –≥—Ä—É–ø–ø–µ –∏ –¥–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        user_profile: –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (age, conditions, life_stage, etc.)

    Returns:
        –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    """

    vulnerable_groups_db = ctx.deps.vulnerable_groups_db
    identified_groups = []

    age = user_profile.get("age")
    conditions = user_profile.get("conditions", [])
    life_stage = user_profile.get("life_stage", "")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø
    if age and age < 18:
        identified_groups.append("children_adolescents")
    elif age and age > 65:
        identified_groups.append("elderly")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏/–ø–æ—Å–ª–µ—Ä–æ–¥–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
    if life_stage and ("pregnant" in life_stage.lower() or "postpartum" in life_stage.lower()):
        identified_groups.append("pregnancy_postpartum")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∂–∏–≤—à–∏—Ö –ø–æ—Å–ª–µ —Ç—Ä–∞–≤–º—ã
    trauma_keywords = ["ptsd", "—Ç—Ä–∞–≤–º–∞", "trauma", "abuse", "–Ω–∞—Å–∏–ª–∏–µ"]
    if any(keyword in " ".join(conditions).lower() for keyword in trauma_keywords):
        identified_groups.append("trauma_survivors")

    # –ï—Å–ª–∏ –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —É—è–∑–≤–∏–º—ã–µ –≥—Ä—É–ø–ø—ã
    if not identified_groups:
        return """
‚úÖ **–û—Ü–µ–Ω–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏**

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—è–∑–≤–∏–º—ã–µ –≥—Ä—É–ø–ø—ã.
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ —Å –æ–±—ã—á–Ω—ã–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º.

**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
- –†–µ–≥—É–ª—è—Ä–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
- –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –º–æ–¥—É–ª—è
"""

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
    recommendations_text = []
    for group in identified_groups:
        group_data = vulnerable_groups_db.vulnerable_groups.get(group, {})

        recommendations_text.append(f"""
### {group_data.get('age_range', group).upper()}

**–§–∞–∫—Ç–æ—Ä—ã —É—è–∑–≤–∏–º–æ—Å—Ç–∏:**
{chr(10).join([f"- {v}" for v in group_data.get('vulnerabilities', [])])}

**–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏:**
{chr(10).join([f"- {m}" for m in group_data.get('modifications', [])])}

**–ö—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ (–º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å):**
{chr(10).join([f"- {f}" for f in group_data.get('red_flags', [])])}
""")

    result = f"""
‚ö†Ô∏è **–û–¶–ï–ù–ö–ê –£–Ø–ó–í–ò–ú–û–ô –ì–†–£–ü–ü–´**

**–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:**
- –í–æ–∑—Ä–∞—Å—Ç: {age if age else '–ù–µ —É–∫–∞–∑–∞–Ω'}
- –°–æ—Å—Ç–æ—è–Ω–∏—è: {', '.join(conditions) if conditions else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}
- –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —ç—Ç–∞–ø: {life_stage if life_stage else '–ù–µ —É–∫–∞–∑–∞–Ω'}

**–ò–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—è–∑–≤–∏–º—ã–µ –≥—Ä—É–ø–ø—ã:** {', '.join(identified_groups)}

---

{''.join(recommendations_text)}

---

**üîí –û–ë–©–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò:**
1. –£—Å–∏–ª–µ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
2. –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª–µ–π
3. –ë–æ–ª–µ–µ —á–∞—Å—Ç–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
4. –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —ç—Å–∫–∞–ª–∞—Ü–∏–∏ –ø–æ–º–æ—â–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
5. Trauma-informed –ø–æ–¥—Ö–æ–¥ –∫–æ –≤—Å–µ–º –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏—è–º
"""

    return result


async def search_agent_knowledge(
    ctx: RunContext[PatternSafetyProtocolDependencies],
    query: str,
    match_count: int = 5
) -> str:
    """
    –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π Pattern Safety Protocol Agent —á–µ—Ä–µ–∑ Archon RAG.

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        query: –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        match_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    Returns:
        –ù–∞–π–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
    """

    search_tags = ctx.deps.knowledge_tags

    try:
        return f"""
üîç **–ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π Pattern Safety Protocol**

**–ó–∞–ø—Ä–æ—Å:** {query}
**–¢–µ–≥–∏:** {', '.join(search_tags)}
**–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:** {match_count}

–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –≤ Archon.

üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª knowledge/pattern_safety_protocol_knowledge.md –≤ Archon Knowledge Base.
"""

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π: {e}"


__all__ = [
    "assess_user_risk",
    "check_technique_contraindications",
    "check_pharmacological_interactions",
    "generate_crisis_response",
    "assess_vulnerable_group",
    "search_agent_knowledge"
]
