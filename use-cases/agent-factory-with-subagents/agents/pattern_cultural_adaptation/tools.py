"""
–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è Pattern Cultural Adaptation Expert Agent.

–ù–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∫—É–ª—å—Ç—É—Ä–Ω–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏–π
—Å —É—á–µ—Ç–æ–º –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π, —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤ –∏ —è–∑—ã–∫–æ–≤—ã—Ö –Ω—é–∞–Ω—Å–æ–≤.
–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ PatternShift.
"""

from typing import Dict, List, Any, Optional
from pydantic import BaseModel, Field
from pydantic_ai import RunContext

from .dependencies import (
    PatternCulturalAdaptationExpertDependencies,
    PatternShiftCulture,
    PatternShiftReligion,
    PatternShiftPhase,
    ModuleType
)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è
from .cultural_profiling import (
    PatternShiftCulturalProfiler,
    UserCulturalResponse,
    CulturalProfilingResult
)

from .auto_culture_assignment import (
    PatternShiftCultureAssigner,
    CultureAssignmentResult,
    AssignmentConfidenceLevel
)


class CulturalAnalysisRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è PatternShift."""
    content: str = Field(description="–ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
    target_culture: str = Field(description="–¶–µ–ª–µ–≤–∞—è PatternShift –∫—É–ª—å—Ç—É—Ä–∞")
    content_type: str = Field(default="general", description="–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    sensitivity_level: str = Field(default="moderate", description="–£—Ä–æ–≤–µ–Ω—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")


class AdaptationRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è PatternShift."""
    original_content: str = Field(description="–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
    target_culture: str = Field(description="–¶–µ–ª–µ–≤–∞—è PatternShift –∫—É–ª—å—Ç—É—Ä–∞")
    adaptation_type: str = Field(description="–¢–∏–ø –∞–¥–∞–ø—Ç–∞—Ü–∏–∏")
    preserve_elements: List[str] = Field(default_factory=list, description="–≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")


class CulturalValidationRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é –∫—É–ª—å—Ç—É—Ä–Ω–æ–π –ø—Ä–∏–µ–º–ª–µ–º–æ—Å—Ç–∏ –¥–ª—è PatternShift."""
    adapted_content: str = Field(description="–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç")
    target_culture: str = Field(description="–¶–µ–ª–µ–≤–∞—è PatternShift –∫—É–ª—å—Ç—É—Ä–∞")
    validation_criteria: List[str] = Field(default_factory=list, description="–ö—Ä–∏—Ç–µ—Ä–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏")


class MetaphorAdaptationRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é –º–µ—Ç–∞—Ñ–æ—Ä –¥–ª—è PatternShift."""
    original_metaphors: List[str] = Field(description="–ò—Å—Ö–æ–¥–Ω—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã")
    target_culture: str = Field(description="–¶–µ–ª–µ–≤–∞—è PatternShift –∫—É–ª—å—Ç—É—Ä–∞")
    context: str = Field(description="–ö–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    emotional_tone: str = Field(default="neutral", description="–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω")


class UserRegistrationData(BaseModel):
    """–î–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è."""
    responses: List[Dict[str, Any]] = Field(description="–û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∞–Ω–∫–µ—Ç—ã")
    language_preference: str = Field(default="ru", description="–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫")
    additional_info: Dict[str, Any] = Field(default_factory=dict, description="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")


class CulturalProfileUpdateRequest(BaseModel):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id: str = Field(description="–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    profile_updates: Dict[str, Any] = Field(description="–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è")
    reason: str = Field(description="–ü—Ä–∏—á–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
    confidence_adjustment: Optional[float] = Field(default=None, description="–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏")


async def search_agent_knowledge(
    ctx: RunContext[PatternCulturalAdaptationExpertDependencies],
    query: str,
    match_count: int = 5
) -> str:
    """
    –ü–æ–∏—Å–∫ –≤ –∑–Ω–∞–Ω–∏—è—Ö –∞–≥–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ Archon RAG.

    Args:
        query: –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        match_count: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    Returns:
        –ù–∞–π–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    """
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–≥–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–Ω–∞–Ω–∏–π –∞–≥–µ–Ω—Ç–∞
        search_tags = " ".join(ctx.deps.knowledge_tags)
        enhanced_query = f"{query} {search_tags}"

        # –ó–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ Archon RAG –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
        # result = await mcp__archon__rag_search_knowledge_base(
        #     query=enhanced_query,
        #     match_count=match_count
        # )

        return f"""
üìö **–ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π PatternShift Cultural Adaptation Expert**

üîç **–ó–∞–ø—Ä–æ—Å:** {query}
üè∑Ô∏è **–¢–µ–≥–∏:** {search_tags}

üí° **–ù–∞–π–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫—É–ª—å—Ç—É—Ä–Ω–æ-–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Ç–∞—Ñ–æ—Ä –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏–π
- –ü—Ä–∏–Ω—Ü–∏–ø—ã –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ù–õ–ü —Ç–µ—Ö–Ω–∏–∫ –ø–æ–¥ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π, –ø–æ–ª—å—Å–∫–∏–π –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
- –ü—Ä–æ—Ç–æ–∫–æ–ª—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫—É–ª—å—Ç—É—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Ä–∞–±–æ—Ç–µ
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤ –≤ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã

‚ö†Ô∏è **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Archon RAG –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
"""

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–Ω–∞–Ω–∏–π: {e}"


async def analyze_cultural_context(
    ctx: RunContext[PatternCulturalAdaptationExpertDependencies],
    request: CulturalAnalysisRequest
) -> str:
    """
    –ê–Ω–∞–ª–∏–∑ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è PatternShift –ø—Ä–æ–≥—Ä–∞–º–º—ã.

    Args:
        request: –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑

    Returns:
        –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
    """
    try:
        target_culture = PatternShiftCulture(request.target_culture)
        cultural_context = ctx.deps.get_patternshift_cultural_context()

        analysis_result = f"""
üéØ **–ö—É–ª—å—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è PatternShift**

üìã **–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:**
- –¶–µ–ª–µ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞: {target_culture.value}
- –†–µ–ª–∏–≥–∏–æ–∑–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: {cultural_context.get('religion', '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω')}
- –§–∞–∑–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã: {cultural_context.get('phase', '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')}
- –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {request.content_type}

üß≠ **–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
"""

        # –ê–Ω–∞–ª–∏–∑ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        if target_culture == PatternShiftCulture.UKRAINIAN:
            analysis_result += """
- –í—ã—Å–æ–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–∫—Ä–∞—Å–∫–æ–π
- –í–∞–∂–Ω–æ—Å—Ç—å —Å–µ–º–µ–π–Ω—ã—Ö —Å–≤—è–∑–µ–π –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏
- –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –º–µ—Ç–∞—Ñ–æ—Ä: –ø–æ–ª–µ, –¥—É–±, —Ä–µ–∫–∞
- –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ —Ç–µ–º–∞–º –≤–æ–π–Ω—ã –∏ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏
- –ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ"""

        elif target_culture == PatternShiftCulture.POLISH:
            analysis_result += """
- –£–º–µ—Ä–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ —Ç—Ä–∞–¥–∏—Ü–∏—è–º
- –°–∏–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –∫–∞—Ç–æ–ª–∏—á–µ—Å–∫–∏—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π
- –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã —Å–æ–ª–∏–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∏ –≥–æ—Ä–¥–æ—Å—Ç–∏
- –°–µ–º–µ–π–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∫–∞–∫ –æ—Å–Ω–æ–≤–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–∏
- –í–∞–∂–Ω–æ—Å—Ç—å –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏"""

        elif target_culture == PatternShiftCulture.ENGLISH:
            analysis_result += """
- –ù–∏–∑–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ø—Ä—è–º–∞—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è
- –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª–∏–∑–º –∏ –ª–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
- –°–≤–µ—Ç—Å–∫–∏–µ, —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã
- –ë–∏–∑–Ω–µ—Å –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã
- –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"""

        analysis_result += f"""

‚ö†Ô∏è **–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–º—ã:**
{chr(10).join(['- ' + topic for topic in cultural_context.get('sensitive_topics', [])])}

üé® **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã:**
{chr(10).join(['- ' + metaphor for metaphor in cultural_context.get('preferred_metaphors', [])])}

üìä **–£—Ä–æ–≤–µ–Ω—å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏:** {cultural_context.get('patternshift_settings', {}).get('depth', '—É–º–µ—Ä–µ–Ω–Ω—ã–π')}
"""

        return analysis_result

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {e}"


async def adapt_content_culturally(
    ctx: RunContext[PatternCulturalAdaptationExpertDependencies],
    request: AdaptationRequest
) -> str:
    """
    –ö—É–ª—å—Ç—É—Ä–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è PatternShift –ø—Ä–æ–≥—Ä–∞–º–º—ã.

    Args:
        request: –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é

    Returns:
        –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø–æ—è—Å–Ω–µ–Ω–∏—è–º–∏
    """
    try:
        target_culture = PatternShiftCulture(request.target_culture)
        cultural_context = ctx.deps.get_patternshift_cultural_context()

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–Ω—Ü–∏–ø—ã –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –¥–ª—è –∫—É–ª—å—Ç—É—Ä—ã
        adaptation_principles = {
            "metaphors": cultural_context.get('preferred_metaphors', []),
            "communication": "–ø—Ä—è–º–æ–π" if target_culture == PatternShiftCulture.ENGLISH else "–∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π",
            "values": cultural_context.get('cultural_heroes', []),
            "examples": []
        }

        adapted_content = request.original_content
        adaptation_notes = []

        # –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –¥–ª—è PatternShift –∫—É–ª—å—Ç—É—Ä
        if target_culture == PatternShiftCulture.UKRAINIAN:
            adapted_content = adapted_content.replace("–ø—É—Ç—å", "–¥–æ—Ä–æ–≥–∞ –¥–æ–º–æ–π")
            adapted_content = adapted_content.replace("—Ü–µ–ª—å", "–º—Ä—ñ—è")
            adaptation_notes.append("–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –∫–ª—é—á–µ–≤—ã–µ –ø–æ–Ω—è—Ç–∏—è –ø–æ–¥ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π –º–µ–Ω—Ç–∞–ª–∏—Ç–µ—Ç")

        elif target_culture == PatternShiftCulture.POLISH:
            if "—Å–µ–º—å—è" in adapted_content.lower():
                adaptation_notes.append("–£—Å–∏–ª–µ–Ω –∞–∫—Ü–µ–Ω—Ç –Ω–∞ —Å–µ–º–µ–π–Ω—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö")
            if "—Ç—Ä–∞–¥–∏—Ü–∏—è" in adapted_content.lower():
                adaptation_notes.append("–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç–∞ –≤–∞–∂–Ω–æ—Å—Ç—å –∫–∞—Ç–æ–ª–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–∞–¥–∏—Ü–∏–π")

        elif target_culture == PatternShiftCulture.ENGLISH:
            adapted_content = adapted_content.replace("–º—ã –≤–º–µ—Å—Ç–µ", "you can achieve")
            adaptation_notes.append("–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥")

        return f"""
üéØ **PatternShift –ö—É–ª—å—Ç—É—Ä–Ω–∞—è –ê–¥–∞–ø—Ç–∞—Ü–∏—è**

üìù **–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:**
{request.original_content}

‚ú® **–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:**
{adapted_content}

üîß **–ü—Ä–∏–Ω—Ü–∏–ø—ã –∞–¥–∞–ø—Ç–∞—Ü–∏–∏:**
- –ú–µ—Ç–∞—Ñ–æ—Ä—ã: {', '.join(adaptation_principles['metaphors'][:3])}
- –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è: {adaptation_principles['communication']}
- –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –≥–µ—Ä–æ–∏: {', '.join(adaptation_principles['values'][:2])}

üìã **–í–Ω–µ—Å–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:**
{chr(10).join(['- ' + note for note in adaptation_notes]) if adaptation_notes else "- –ö–æ–Ω—Ç–µ–Ω—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –∫—É–ª—å—Ç—É—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç"}

üéØ **–¶–µ–ª–µ–≤–∞—è PatternShift –∫—É–ª—å—Ç—É—Ä–∞:** {target_culture.value}
üìä **–¢–∏–ø –∞–¥–∞–ø—Ç–∞—Ü–∏–∏:** {request.adaptation_type}

‚úÖ **PatternShift —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å:** –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è 21-–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏
"""

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –∫—É–ª—å—Ç—É—Ä–Ω–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏: {e}"


async def validate_cultural_appropriateness(
    ctx: RunContext[PatternCulturalAdaptationExpertDependencies],
    request: CulturalValidationRequest
) -> str:
    """
    –í–∞–ª–∏–¥–∞—Ü–∏—è –∫—É–ª—å—Ç—É—Ä–Ω–æ–π –ø—Ä–∏–µ–º–ª–µ–º–æ—Å—Ç–∏ –¥–ª—è PatternShift.

    Args:
        request: –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é

    Returns:
        –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    """
    try:
        target_culture = PatternShiftCulture(request.target_culture)
        cultural_context = ctx.deps.get_patternshift_cultural_context()

        validation_results = {
            "cultural_sensitivity": True,
            "religious_appropriateness": True,
            "language_appropriateness": True,
            "patternshift_compatibility": True,
            "overall_score": 0.0,
            "issues": [],
            "recommendations": []
        }

        content_lower = request.adapted_content.lower()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ–º PatternShift
        sensitive_topics = cultural_context.get('sensitive_topics', [])
        for topic in sensitive_topics:
            if topic.lower() in content_lower:
                validation_results["issues"].append(f"–°–æ–¥–µ—Ä–∂–∏—Ç —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—É—é —Ç–µ–º—É: {topic}")
                validation_results["cultural_sensitivity"] = False

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ª–∏–≥–∏–æ–∑–Ω–æ–π –ø—Ä–∏–µ–º–ª–µ–º–æ—Å—Ç–∏ –¥–ª—è PatternShift
        religion = cultural_context.get('religion')
        if religion == PatternShiftReligion.ORTHODOX.value:
            if any(word in content_lower for word in ["–∫–∞—Ç–æ–ª–∏—á–µ—Å–∫–∏–π", "–ø—Ä–æ—Ç–µ—Å—Ç–∞–Ω—Ç—Å–∫–∏–π"]):
                validation_results["issues"].append("–í–æ–∑–º–æ–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º")
                validation_results["religious_appropriateness"] = False
        elif religion == PatternShiftReligion.CATHOLIC.value:
            if any(word in content_lower for word in ["–ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π", "–ø—Ä–æ—Ç–µ—Å—Ç–∞–Ω—Ç—Å–∫–∏–π"]):
                validation_results["issues"].append("–í–æ–∑–º–æ–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –∫–∞—Ç–æ–ª–∏—á–µ—Å–∫–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º")
                validation_results["religious_appropriateness"] = False

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å PatternShift –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
        patternshift_keywords = ["–ø—Ä–æ–≥—Ä–∞–º–º–∞", "—Ñ–∞–∑–∞", "–¥–µ–Ω—å", "—Å–µ—Å—Å–∏—è", "–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "–º–æ–¥—É–ª—å"]
        if not any(keyword in content_lower for keyword in patternshift_keywords):
            validation_results["recommendations"].append("–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã PatternShift")

        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –±–∞–ª–ª–∞
        score_factors = [
            validation_results["cultural_sensitivity"],
            validation_results["religious_appropriateness"],
            validation_results["language_appropriateness"],
            validation_results["patternshift_compatibility"]
        ]
        validation_results["overall_score"] = sum(score_factors) / len(score_factors) * 100

        status_emoji = "‚úÖ" if validation_results["overall_score"] >= 80 else "‚ö†Ô∏è" if validation_results["overall_score"] >= 60 else "‚ùå"

        return f"""
{status_emoji} **PatternShift –ö—É–ª—å—Ç—É—Ä–Ω–∞—è –í–∞–ª–∏–¥–∞—Ü–∏—è**

üìä **–û–±—â–∏–π –±–∞–ª–ª:** {validation_results["overall_score"]:.1f}%

üéØ **–¶–µ–ª–µ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞:** {target_culture.value}

‚úÖ **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:**
- –ö—É–ª—å—Ç—É—Ä–Ω–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {'‚úÖ' if validation_results["cultural_sensitivity"] else '‚ùå'}
- –†–µ–ª–∏–≥–∏–æ–∑–Ω–∞—è –ø—Ä–∏–µ–º–ª–µ–º–æ—Å—Ç—å: {'‚úÖ' if validation_results["religious_appropriateness"] else '‚ùå'}
- –Ø–∑—ã–∫–æ–≤–∞—è —É–º–µ—Å—Ç–Ω–æ—Å—Ç—å: {'‚úÖ' if validation_results["language_appropriateness"] else '‚ùå'}
- PatternShift —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: {'‚úÖ' if validation_results["patternshift_compatibility"] else '‚ùå'}

{'‚ö†Ô∏è **–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:**' + chr(10) + chr(10).join(['- ' + issue for issue in validation_results["issues"]]) if validation_results["issues"] else ''}

{'üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**' + chr(10) + chr(10).join(['- ' + rec for rec in validation_results["recommendations"]]) if validation_results["recommendations"] else ''}

üìã **–ö—Ä–∏—Ç–µ—Ä–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:**
{', '.join(request.validation_criteria) if request.validation_criteria else '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ PatternShift'}
"""

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}"


async def adapt_metaphors_culturally(
    ctx: RunContext[PatternCulturalAdaptationExpertDependencies],
    request: MetaphorAdaptationRequest
) -> str:
    """
    –ê–¥–∞–ø—Ç–∞—Ü–∏—è –º–µ—Ç–∞—Ñ–æ—Ä –¥–ª—è PatternShift –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.

    Args:
        request: –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é –º–µ—Ç–∞—Ñ–æ—Ä

    Returns:
        –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã
    """
    try:
        target_culture = PatternShiftCulture(request.target_culture)
        cultural_context = ctx.deps.get_patternshift_cultural_context()

        adapted_metaphors = []
        adaptation_explanations = []

        for metaphor in request.original_metaphors:
            adapted_metaphor = metaphor
            explanation = f"–û—Ä–∏–≥–∏–Ω–∞–ª: {metaphor}"

            # –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ PatternShift –∫—É–ª—å—Ç—É—Ä—ã
            if target_culture == PatternShiftCulture.UKRAINIAN:
                metaphor_mapping = {
                    "–ø—É—Ç—å": "–¥–æ—Ä–æ–≥–∞ –¥–æ–º–æ–π",
                    "–¥–µ—Ä–µ–≤–æ": "–¥—É–±-–≤—ñ–∫–æ–≤–∏–π",
                    "—Ä–µ–∫–∞": "—Ä—ñ–∫–∞ –∂–∏—Ç—Ç—è",
                    "–¥–æ–º": "—Ä–æ–¥–∏–Ω–Ω–µ –≤–æ–≥–Ω–∏—â–µ",
                    "–º–æ—Å—Ç": "–º—ñ—Å—Ç —á–µ—Ä–µ–∑ —Ä—ñ—á–∫—É"
                }
                for orig, adapted in metaphor_mapping.items():
                    if orig in metaphor.lower():
                        adapted_metaphor = metaphor.replace(orig, adapted)
                        explanation += f" ‚Üí –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ: {adapted_metaphor}"
                        break

            elif target_culture == PatternShiftCulture.POLISH:
                metaphor_mapping = {
                    "–ø—É—Ç—å": "droga do domu",
                    "—Å–µ–º—å—è": "rodzina katolicka",
                    "–∏—Å—Ç–æ—Ä–∏—è": "historia solidarno≈õci",
                    "—Å–∏–ª–∞": "si≈Ça tradycji"
                }
                for orig, adapted in metaphor_mapping.items():
                    if orig in metaphor.lower():
                        adapted_metaphor = metaphor.replace(orig, adapted)
                        explanation += f" ‚Üí –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ: {adapted_metaphor}"
                        break

            elif target_culture == PatternShiftCulture.ENGLISH:
                metaphor_mapping = {
                    "–ø—É—Ç—å": "personal journey",
                    "–∫–æ–º–∞–Ω–¥–∞": "individual achievement",
                    "—Ç—Ä–∞–¥–∏—Ü–∏—è": "innovation",
                    "—Å–æ–æ–±—â–µ—Å—Ç–≤–æ": "networking"
                }
                for orig, adapted in metaphor_mapping.items():
                    if orig in metaphor.lower():
                        adapted_metaphor = metaphor.replace(orig, adapted)
                        explanation += f" ‚Üí –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ: {adapted_metaphor}"
                        break

            adapted_metaphors.append(adapted_metaphor)
            adaptation_explanations.append(explanation)

        return f"""
üé® **PatternShift –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ú–µ—Ç–∞—Ñ–æ—Ä**

üéØ **–¶–µ–ª–µ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞:** {target_culture.value}
üìù **–ö–æ–Ω—Ç–µ–∫—Å—Ç:** {request.context}
üòä **–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω:** {request.emotional_tone}

‚ú® **–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã:**
{chr(10).join(['- ' + metaphor for metaphor in adapted_metaphors])}

üîÑ **–ü—Ä–æ—Ü–µ—Å—Å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏:**
{chr(10).join(adaptation_explanations)}

üåü **–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:**
- –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑—ã: {', '.join(cultural_context.get('preferred_metaphors', [])[:3])}
- –£—á—Ç–µ–Ω —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: {cultural_context.get('religion', '—Å–≤–µ—Ç—Å–∫–∏–π')}
- –ò–∑–±–µ–≥–∞–Ω–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ–º: {', '.join(cultural_context.get('sensitive_topics', [])[:2])}

‚úÖ **PatternShift –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:** –ú–µ—Ç–∞—Ñ–æ—Ä—ã –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏–π
"""

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –º–µ—Ç–∞—Ñ–æ—Ä: {e}"


async def generate_cultural_examples(
    ctx: RunContext[PatternCulturalAdaptationExpertDependencies],
    topic: str,
    target_culture: str,
    context: str = "general"
) -> str:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—É–ª—å—Ç—É—Ä–Ω–æ-–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–ª—è PatternShift.

    Args:
        topic: –¢–µ–º–∞ –ø—Ä–∏–º–µ—Ä–æ–≤
        target_culture: –¶–µ–ª–µ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

    Returns:
        –ö—É–ª—å—Ç—É—Ä–Ω–æ-–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã
    """
    try:
        culture = PatternShiftCulture(target_culture)
        cultural_context = ctx.deps.get_patternshift_cultural_context()

        examples = []

        if topic.lower() == "—Å—Ç—Ä–µ—Å—Å":
            if culture == PatternShiftCulture.UKRAINIAN:
                examples = [
                    "–ü–æ–¥—ñ–±–Ω–æ –¥–æ –¥—É–±–∞, —â–æ –≥–Ω–µ—Ç—å—Å—è –≤—ñ–¥ –≤—ñ—Ç—Ä—É, –∞–ª–µ –Ω–µ –ª–∞–º–∞—î—Ç—å—Å—è",
                    "–Ø–∫ —Ä—ñ–∫–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å —à–ª—è—Ö –Ω–∞–≤–∫–æ–ª–æ –∫–∞–º–µ–Ω—ñ–≤",
                    "–ù–∞—á–µ –¥–æ–º–∞—à–Ω—î –≤–æ–≥–Ω–∏—â–µ, —â–æ –¥–∞—î —Ç–µ–ø–ª–æ –≤ —Ö–æ–ª–æ–¥–Ω—É –Ω—ñ—á"
                ]
            elif culture == PatternShiftCulture.POLISH:
                examples = [
                    "Jak silna rodzina katolicka w trudnych czasach",
                    "Podobnie do solidarno≈õci, kt√≥ra jednoczy ludzi",
                    "Jak tradycyjne warto≈õci, kt√≥re nas prowadzƒÖ"
                ]
            elif culture == PatternShiftCulture.ENGLISH:
                examples = [
                    "Like a personal fitness journey with clear milestones",
                    "Similar to project management - breaking down big tasks",
                    "Think of it as software optimization - removing bugs"
                ]

        elif topic.lower() == "–º–æ—Ç–∏–≤–∞—Ü–∏—è":
            if culture == PatternShiftCulture.UKRAINIAN:
                examples = [
                    "–Ø–∫ –º—Ä—ñ—è –ø—Ä–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ–¥–æ–º—É",
                    "–ù–∞—á–µ —Å—ñ—è–Ω–Ω—è –∑–µ—Ä–Ω–∞ –≤ —Ä—ñ–¥–Ω—É –∑–µ–º–ª—é",
                    "–ü–æ–¥—ñ–±–Ω–æ –¥–æ —Å–≤—ñ—Ç–ª–∞, —â–æ –≤–µ–¥–µ —á–µ—Ä–µ–∑ —Ç–µ–º–Ω–∏–π –ª—ñ—Å"
                ]
            elif culture == PatternShiftCulture.POLISH:
                examples = [
                    "Jak modlitwa, kt√≥ra daje si≈Çƒô",
                    "Podobnie do rodzinnych tradycji przekazywanych pokoleniom",
                    "Jak dƒÖ≈ºenie do wolno≈õci i niepodleg≈Ço≈õci"
                ]
            elif culture == PatternShiftCulture.ENGLISH:
                examples = [
                    "Like achieving your quarterly business goals",
                    "Similar to upgrading your personal operating system",
                    "Think of it as your individual success metrics"
                ]

        return f"""
üí° **PatternShift –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –ü—Ä–∏–º–µ—Ä—ã**

üéØ **–¢–µ–º–∞:** {topic}
üåç **–¶–µ–ª–µ–≤–∞—è –∫—É–ª—å—Ç—É—Ä–∞:** {culture.value}
üìã **–ö–æ–Ω—Ç–µ–∫—Å—Ç:** {context}

‚ú® **–ü—Ä–∏–º–µ—Ä—ã:**
{chr(10).join(['- ' + example for example in examples])}

üé® **–ö—É–ª—å—Ç—É—Ä–Ω–∞—è –æ—Å–Ω–æ–≤–∞:**
- –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã: {', '.join(cultural_context.get('preferred_metaphors', [])[:2])}
- –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –≥–µ—Ä–æ–∏: {', '.join(cultural_context.get('cultural_heroes', [])[:2])}
- –†–µ–ª–∏–≥–∏–æ–∑–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: {cultural_context.get('religion', '—Å–≤–µ—Ç—Å–∫–∏–π')}

üìö **–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ PatternShift:**
–ü—Ä–∏–º–µ—Ä—ã –≥–æ—Ç–æ–≤—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ 21-–¥–Ω–µ–≤–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏, –º–æ–¥—É–ª–∏ –ù–õ–ü –∏ —ç—Ä–∏–∫—Å–æ–Ω–æ–≤—Å–∫–æ–≥–æ –≥–∏–ø–Ω–æ–∑–∞.
"""

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤: {e}"


# –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º —É–¥–∞–ª–µ–Ω—ã —Å–æ–≥–ª–∞—Å–Ω–æ –∞—É–¥–∏—Ç—É –∫–∞—á–µ—Å—Ç–≤–∞.
# Pattern –∞–≥–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç, –∞ –Ω–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º.